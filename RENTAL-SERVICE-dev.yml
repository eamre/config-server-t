spring:
  application:
    name: RENTAL-SERVICE
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/realms/RentACarMicroservice/protocol/openid-connect/certs

  datasource:
    username: postgres
    password: 'sifre'
    url: jdbc:postgresql://localhost:5432/rentaldb-t2
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  kafka:
    producer:
      bootstrap-servers: http://localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${random.value}
    prefer-ip-address: true
server:
  port: 0

management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0
    zipkin:
      tracing:
        endpoint: http://192.168.1.9:9411/api/v2/spans
resilience4j:
  retry:
    instances:
      rentalInventoryRetry:
        max-attempts: 3
        wait-duration: 8s
      retry-payment:
        max-attempts: 5
        wait-duration: 5s

